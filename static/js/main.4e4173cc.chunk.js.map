{"version":3,"sources":["components/TrackCard/TrackCard.jsx","components/ModalDetails/ModalDetails.jsx","components/TrackList/TrackList.jsx","utilities/getPlaylistId.js","components/HeadSearch/HeadSearch.jsx","components/WebPlayer/WebPlayer.jsx","components/QuickButton/QuickButton.jsx","components/ToolKit/ToolKit.jsx","components/Modal/Modal.jsx","utilities/filterHelpFunctions.js","components/ConfirmationModal/ConfirmationModal.jsx","components/MainWrapper/MainWrapper.jsx","App.js","serviceWorker.js","index.js"],"names":["TrackCard","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","TrackData","isLoading","inherits","createClass","key","value","setState","track","react_default","a","createElement","className","src","image","alt","songName","artist","onClick","handleShowModalDetails","bind","id","React","Component","ModalDetails","_this$props$track","danceability","energy","acousticness","instrumentalness","valence","tempo","style","backdropDetails","handleCloseModalDetails","modalStyles","ProgressBar_default","now","Math","round","label","concat","backgroundColor","position","left","top","width","height","zIndex","border","boxShadow","borderRadius","maxWidth","margin","padding","TrackList","showModalDetails","selectedTrack","undefined","playlist","find","obj","e","target","currentTarget","_this2","map","TrackCard_TrackCard","components_ModalDetails_ModalDetails","getPlaylistId","str","includes","split","HeadSearch","search","filterInput","errorMessIsVisible","inputType","fetch","then","res","json","length","hideLanding","playlistUri","getData","playlistId","toggleModal","window","location","reload","_this3","playlists","userPlaylists","uri","name","replace","onToggleModal","reloadPage","showLanding","displayValue","option","type","checked","onChange","handleRadio","handleSelectPlaylist","ref","placeholder","input","handleInputTextChange","onKeyDown","handleKeyPress","handleOnClick","visibility","WebPlayer","URL","title","screen","frameBorder","allowtransparency","allow","quickButtons","activeButton","onPresetClick","toggleDance","toggleEnergy","toggleAcousticness","toggleInstrumentalness","toggleValence","toggleTempo","setHappyMode","setAngerMode","setPartyMode","setSoftMode","Container_default","Row_default","Col_default","Button_default","resetPreset","variant","size","ToolKit","createNotification","NotificationManager","info","success","warning","error","alert","console","log","showAdvancedToolbar","showQuickButton","showConfirmationModal","preset","updateDance","updateEnergy","updateAcousticness","updateInstrumentalness","updateValence","updateTempo","onToggleQuickButton","onToggleToolbar","onToggleDance","lg","md","sm","js_default","disabled","step","minValue","maxValue","onToggleEnergy","onToggleAcousticness","onToggleInstrumentalness","onToggleValence","onToggleTempo","QuickButton_quickButtons","toggleConfirmationModal","lib","Modal","isShowing","modalWrapper","transform","displayModal","backDrop","opacity","fontWeight","getUpperLimit","getLowerLimit","ConfirmationModal","playlistName","createPlaylist","handleSubmitplaylist","onKeyPress","MainWrapper","showModal","user","filteredPlaylist","parsed","items","inputName","accessToken","method","_this4","filter","components_HeadSearch_HeadSearch","updatePlaylistUri","updatePlaylist","components_Modal_Modal","components_ConfirmationModal_ConfirmationModal","components_ToolKit_ToolKit","updateDanceability","userId","xs","components_TrackList_TrackList","filterValues","WebPlayer_WebPlayer","App","components_MainWrapper_MainWrapper","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e4173cc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class TrackCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            TrackData: {},\r\n            isLoading: true,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            TrackData: this.props.track,\r\n            isLoading: false,\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const track = this.state.TrackData;\r\n\r\n        return (\r\n            <div className='trackCard'>\r\n                <div>\r\n                    <img className='trackCardImg' src={track.image} alt=\"\" />\r\n                </div>\r\n                <div>\r\n                    <p className='trackNameStyles'>{track.songName}</p>\r\n                    <p className='artistStyles'>{track.artist}</p>\r\n                </div>\r\n                <div>\r\n                    <img\r\n                        className='info-i-img'\r\n                        src='./Info-i.png'\r\n                        alt='Detailed track info'\r\n                        onClick={this.props.handleShowModalDetails.bind(this, track.id)} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\nclass ModalDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const { songName, artist, danceability, energy, acousticness, instrumentalness, valence, tempo } = this.props.track;\r\n        return (\r\n            <div style={backdropDetails} onClick={this.props.handleCloseModalDetails.bind(this)}>\r\n                <div style={modalStyles}>\r\n                    <img className='close-button' src='./close.png' onClick={this.props.handleCloseModalDetails.bind(this)} alt='Close' />\r\n                    <p className='trackNameStyles-inmodal'>{songName}</p>\r\n                    <p className='artistStyles-inmodal'>{artist}</p>\r\n                    <div className='barStyle'>Dance<ProgressBar now={Math.round(danceability * 100)} label={`${Math.round(danceability * 100)}%`} /></div>\r\n                    <div className='barStyle'>Energy <ProgressBar now={Math.round(energy * 100)} label={`${Math.round(energy * 100)}%`} /></div>\r\n                    <div className='barStyle'>Acoustic <ProgressBar now={Math.round(acousticness * 100)} label={`${Math.round(acousticness * 100)}%`} /></div>\r\n                    <div className='barStyle'>Instrumental <ProgressBar now={Math.round(instrumentalness * 100)} label={`${Math.round(instrumentalness * 100)}%`} /></div>\r\n                    <div className='barStyle'>Positivity <ProgressBar now={Math.round(valence * 100)} label={`${Math.round(valence * 100)}%`} /></div>\r\n                    <div className='barStyle'>Tempo: {Math.round(tempo)} bpm</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModalDetails;\r\n\r\nconst backdropDetails = {\r\n    backgroundColor: 'rgb(255, 255, 255, 0.4)',\r\n    position: 'fixed',\r\n    left: 0,\r\n    top: 0,\r\n    width: '100vw',\r\n    height: '150vh',\r\n    zIndex: '10',\r\n\r\n}\r\n\r\nconst modalStyles = {\r\n    backgroundColor: 'white',\r\n    border: '1px solid #007d2a',\r\n    boxShadow: '1px 1px 5px 1px #007d2a',\r\n    borderRadius: '5px',\r\n    maxWidth: '300px',\r\n    margin: '0 auto',\r\n    position: 'relative',\r\n    top: '15%',\r\n    padding: '10px',\r\n};","import React, { Component } from \"react\";\r\nimport { TrackCard } from \"../TrackCard/TrackCard\";\r\nimport ModalDetails from \"../ModalDetails/ModalDetails\";\r\n\r\n// let dummyPlaylist = require(\"../../dummydata.json\"); DETTA ÄR DUMMYPLAYLIST\r\n\r\nclass TrackList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showModalDetails: false,\r\n      selectedTrack: undefined\r\n    };\r\n  }\r\n\r\n  handleShowModalDetails(id) {\r\n    this.setState({\r\n      selectedTrack: this.props.playlist.find(obj => obj.id === id)\r\n    });\r\n    this.setState({\r\n      showModalDetails: true,\r\n    });\r\n  }\r\n\r\n  handleCloseModalDetails(e) {\r\n    if (e.target !== e.currentTarget) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      showModalDetails: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.filterValues);\r\n    /* let {\r\n       danceability,\r\n       energy,\r\n       acousticness,\r\n       instrumentalness,\r\n       valence,\r\n       tempo\r\n     } = this.props.filterValues;*/\r\n    const playlist = !this.props.playlist ? [] : this.props.playlist\r\n      .map((track, id) => (\r\n        <TrackCard key={track.id} track={track}\r\n          handleShowModalDetails={this.handleShowModalDetails.bind(this)}\r\n        ></TrackCard>\r\n      ));\r\n\r\n    return (\r\n      <div className=\"tracks-container\">\r\n        {this.state.showModalDetails && (\r\n          <ModalDetails\r\n            track={this.state.selectedTrack}\r\n            handleCloseModalDetails={this.handleCloseModalDetails.bind(this)}\r\n          >\r\n          </ModalDetails>\r\n        )}\r\n        {playlist}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrackList;\r\n","function getPlaylistId(str) {\r\n    let playlistId = '';\r\n\r\n    if (str.includes('?')) {\r\n        str = str.split('?')[0];\r\n        playlistId = str.split('/')[6];\r\n    } else if (str.includes('https://open.spotify.com/playlist/')) {\r\n        playlistId = str.split('/')[4];\r\n    } else if (str.includes(':')) {\r\n        playlistId = str.split(':')[4];\r\n    } else {\r\n        playlistId = str;\r\n    }\r\n    return playlistId;\r\n}\r\n\r\nexport default getPlaylistId;","import React, { Component } from \"react\";\r\nimport getPlaylistId from \"../../utilities/getPlaylistId.js\";\r\n\r\nclass HeadSearch extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      search: [],\r\n      filterInput: \"\",\r\n      playlist: [],\r\n      errorMessIsVisible: false,\r\n      inputType: 'listInput'\r\n    };\r\n  }\r\n\r\n  getData(value) {\r\n    fetch(`https://moodify.sebastianberglonn.se/audio-features/${value}`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.length !== 0) {\r\n          this.setState({ errorMessIsVisible: false })\r\n          return res;\r\n        } else {\r\n          this.setState({ errorMessIsVisible: true })\r\n        }\r\n      })\r\n      .then(res => {\r\n        this.setState({ playlist: res });\r\n      })\r\n      .then(() => this.props.playlist(this.state.playlist))\r\n    if (this.state.playlist) {\r\n      this.props.hideLanding()\r\n    }\r\n  }\r\n\r\n  handleSelectPlaylist(e) {\r\n    if (e.target.value) {\r\n      this.props.playlistUri(e.target.value);\r\n      this.getData(e.target.value)\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === \"Enter\") {\r\n      this.props.playlistUri(this.state.filterInput);\r\n      this.getData(this.state.filterInput)\r\n    }\r\n  }\r\n\r\n  handleRadio(e) {\r\n    this.setState({ inputType: e.target.value })\r\n  }\r\n\r\n  handleInputTextChange(e) {\r\n    let playlistId = getPlaylistId(e.target.value);\r\n    this.setState({ filterInput: playlistId });\r\n  }\r\n\r\n  handleOnClick(e) {\r\n    e.target.value = '';\r\n    this.setState({ errorMessIsVisible: false });\r\n  }\r\n\r\n  onToggleModal() {\r\n    this.props.toggleModal()\r\n  }\r\n\r\n  reloadPage() {\r\n    window.location.reload()\r\n  }\r\n\r\n  render() {\r\n    const playlists = this.props.userPlaylists.map(playlist => (\r\n      <option key={playlist.uri} value={playlist.uri}>{playlist.name}</option>\r\n    ))\r\n    const inputOptions = [\r\n      { value: 'listInput', displayValue: 'Select playlist' },\r\n      { value: 'textInput', displayValue: 'Enter playlistlink' }\r\n    ]\r\n    return (\r\n      <div>\r\n        {!window.location.search.replace('?access_token', '') || window.location.search.replace('?access_token', '') === 'undefined' ?\r\n          <div>\r\n            <h1 className={`header ${this.props.showLanding && 'landingStyle'}`}>Moodify</h1>\r\n            <div><p onClick={() => window.location = 'https://moodify.sebastianberglonn.se/login'} className='loginButton'>Login with Spotify <i className=\"fab fa-spotify\"></i></p></div>\r\n          </div> : <div>\r\n            <img className='question-mark-img' src='./Info-questionmark.png' onClick={this.onToggleModal.bind(this)} alt='Info' />\r\n            <h1 onClick={() => this.reloadPage()} className={`header ${this.props.showLanding && 'landingStyle'}`}>Moodify</h1>\r\n            <div>\r\n              {inputOptions.map(option => (\r\n                <div key={option.value} className=\"radioWrapper\">\r\n                  <input type=\"radio\"\r\n                    value={option.value}\r\n                    checked={this.state.inputType === option.value}\r\n                    onChange={this.handleRadio.bind(this)}\r\n                  />\r\n                  <label>{option.displayValue}</label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {this.state.inputType === 'listInput' ?\r\n              <select className='input-field' onChange={this.handleSelectPlaylist.bind(this)}>\r\n                <option value=\"\">Select playlist...</option>\r\n                {playlists}\r\n              </select> :\r\n              <input\r\n                ref=\"inputUrl\"\r\n                className='input-field'\r\n                type=\"text\"\r\n                placeholder=\"Enter Spotify playlist link...\"\r\n                value={this.state.input}\r\n                onChange={this.handleInputTextChange.bind(this)}\r\n                onKeyDown={this.handleKeyPress.bind(this)}\r\n                onClick={this.handleOnClick.bind(this)}\r\n              />}\r\n            <p className='error-message' style={{ visibility: this.state.errorMessIsVisible ? 'visible' : 'hidden' }}>Oops, no data could be fetched. Please enter a valid playlist link.</p>\r\n          </div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeadSearch;\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class WebPlayer extends Component {\r\n  render() {\r\n    const URL = `https://open.spotify.com/embed/playlist/${\r\n      this.props.playlistUri\r\n      }`;\r\n    return (\r\n      <div className='web-player'>\r\n        <iframe\r\n          title=\"Moodify Webplayer\"\r\n          src={URL}\r\n          width={window.screen.width >= 640 ? \"640\" : `${window.screen.width}`}\r\n          height=\"80\"\r\n          frameBorder=\"0\"\r\n          allowtransparency=\"true\"\r\n          allow=\"encrypted-media\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n//import Button from 'react-bootstrap/Button';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport default class quickButtons extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeButton: ''\r\n        }\r\n    }\r\n\r\n    setHappyMode() {\r\n        this.setState({ activeButton: 'superHappy' })\r\n        this.props.onPresetClick({\r\n            danceability: 0.5,\r\n            energy: 0.5,\r\n            acousticness: 0.5,\r\n            instrumentalness: 0.5,\r\n            valence: 0.9,\r\n            tempo: 180,\r\n            toggleDance: false,\r\n            toggleEnergy: false,\r\n            toggleAcousticness: false,\r\n            toggleInstrumentalness: false,\r\n            toggleValence: true,\r\n            toggleTempo: false,\r\n        });\r\n    }\r\n\r\n    setAngerMode() {\r\n        this.setState({ activeButton: 'angerManagement' })\r\n        this.props.onPresetClick({\r\n            danceability: 0.5,\r\n            energy: 0.9,\r\n            acousticness: 0.5,\r\n            instrumentalness: 0.5,\r\n            valence: 0.2,\r\n            tempo: 180,\r\n            toggleDance: false,\r\n            toggleEnergy: true,\r\n            toggleAcousticness: false,\r\n            toggleInstrumentalness: false,\r\n            toggleValence: true,\r\n            toggleTempo: false,\r\n        });\r\n    }\r\n\r\n    setPartyMode() {\r\n        this.setState({ activeButton: 'maximumParty' });\r\n        this.props.onPresetClick({\r\n            danceability: 0.7,\r\n            energy: 0.8,\r\n            acousticness: 0.5,\r\n            instrumentalness: 0.5,\r\n            valence: 0.5,\r\n            tempo: 180,\r\n            toggleDance: true,\r\n            toggleEnergy: true,\r\n            toggleAcousticness: false,\r\n            toggleInstrumentalness: false,\r\n            toggleValence: false,\r\n            toggleTempo: false,\r\n        });\r\n    }\r\n\r\n    setSoftMode() {\r\n        this.setState({ activeButton: 'softCozy' })\r\n        this.props.onPresetClick({\r\n            danceability: 0.5,\r\n            energy: 0.1,\r\n            acousticness: 0.5,\r\n            instrumentalness: 0.9,\r\n            valence: 0.5,\r\n            tempo: 180,\r\n            toggleDance: false,\r\n            toggleEnergy: true,\r\n            toggleAcousticness: false,\r\n            toggleInstrumentalness: true,\r\n            toggleValence: false,\r\n            toggleTempo: false,\r\n        });\r\n    }\r\n\r\n    resetPreset() {\r\n        this.setState({ activeButton: '' })\r\n        this.props.onPresetClick({\r\n            danceability: 0.5,\r\n            energy: 0.5,\r\n            acousticness: 0.5,\r\n            instrumentalness: 0.5,\r\n            valence: 0.5,\r\n            tempo: 180,\r\n            toggleDance: false,\r\n            toggleEnergy: false,\r\n            toggleAcousticness: false,\r\n            toggleInstrumentalness: false,\r\n            toggleValence: false,\r\n            toggleTempo: false,\r\n        });\r\n    }\r\n\r\n    onHappyClick() {\r\n        this.setHappyMode();\r\n    }\r\n\r\n    onAngerClick() {\r\n        this.setAngerMode();\r\n    }\r\n\r\n    onPartyClick() {\r\n        this.setPartyMode();\r\n    }\r\n\r\n    onSoftClick() {\r\n        this.setSoftMode();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"btn-wrapper\">\r\n                <Row className=\"btn-toolbar\">\r\n                    <Col className=\"btn-col\"><Button onClick={this.state.activeButton === 'superHappy' ? this.resetPreset.bind(this) : this.setHappyMode.bind(this)} variant={this.state.activeButton === 'superHappy' ? 'secondary' : 'outline-secondary'} size=\"md\">Super Happy</Button></Col>\r\n                    <Col className=\"btn-col\"><Button onClick={this.state.activeButton === 'angerManagement' ? this.resetPreset.bind(this) : this.setAngerMode.bind(this)} variant={this.state.activeButton === 'angerManagement' ? 'secondary' : 'outline-secondary'} size=\"md\">Anger Management</Button></Col>\r\n                    <Col className=\"btn-col\"><Button onClick={this.state.activeButton === 'maximumParty' ? this.resetPreset.bind(this) : this.setPartyMode.bind(this)} variant={this.state.activeButton === 'maximumParty' ? 'secondary' : 'outline-secondary'} size=\"md\">Maximum Party</Button></Col>\r\n                    <Col className=\"btn-col\"><Button onClick={this.state.activeButton === 'softCozy' ? this.resetPreset.bind(this) : this.setSoftMode.bind(this)} variant={this.state.activeButton === 'softCozy' ? 'secondary' : 'outline-secondary'} size=\"md\">Soft And Cozy</Button></Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport InputRange from \"react-input-range\";\r\nimport \"react-input-range/lib/css/index.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport QuickButton from '../QuickButton/QuickButton';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\n\r\nclass ToolKit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            danceability: 0.5,\r\n            energy: 0.5,\r\n            acousticness: 0.5,\r\n            instrumentalness: 0.5,\r\n            valence: 0.5,\r\n            tempo: 180,\r\n            toggleDance: false,\r\n            toggleEnergy: false,\r\n            toggleAcousticness: false,\r\n            toggleInstrumentalness: false,\r\n            toggleValence: false,\r\n            toggleTempo: false,\r\n            showAdvancedToolbar: false,\r\n            showQuickButton: false,\r\n            showConfirmationModal: false\r\n        };\r\n    }\r\n\r\n    onPresetClick(preset) {\r\n        this.setState(preset, () => {\r\n            console.log('preset: ', preset);\r\n            this.updateDance();\r\n            this.updateEnergy();\r\n            this.updateAcousticness();\r\n            this.updateInstrumentalness();\r\n            this.updateValence();\r\n            this.updateTempo();\r\n        });\r\n\r\n    }\r\n\r\n    onToggleToolbar() {\r\n        this.setState({ showAdvancedToolbar: !this.state.showAdvancedToolbar, showQuickButton: false })\r\n        console.log(this.state.showAdvancedToolbar);\r\n\r\n    }\r\n\r\n    onToggleQuickButton() {\r\n        this.setState({ showQuickButton: !this.state.showQuickButton, showAdvancedToolbar: false })\r\n        console.log(this.state.showQuickButton);\r\n\r\n    }\r\n\r\n    //Presets\r\n    updateDance() {\r\n        if (this.state.toggleDance) {\r\n            this.props.danceability(this.state.danceability)\r\n        } else {\r\n            this.props.danceability(\"\")\r\n        }\r\n        //this.setState({ toggleDance: !this.state.toggleDance })\r\n\r\n    }\r\n\r\n    updateEnergy() {\r\n        if (this.state.toggleEnergy) {\r\n            this.props.energy(this.state.energy)\r\n        } else {\r\n            this.props.energy(\"\")\r\n        }\r\n    }\r\n\r\n    updateAcousticness() {\r\n        if (this.state.toggleAcousticness) {\r\n            this.props.acousticness(this.state.acousticness)\r\n        } else {\r\n            this.props.acousticness(\"\")\r\n        }\r\n    }\r\n\r\n    updateInstrumentalness() {\r\n        if (this.state.toggleInstrumentalness) {\r\n            this.props.instrumentalness(this.state.instrumentalness)\r\n        } else {\r\n            this.props.instrumentalness(\"\")\r\n        }\r\n    }\r\n\r\n    updateValence() {\r\n        if (this.state.toggleValence) {\r\n            this.props.valence(this.state.valence)\r\n        } else {\r\n            this.props.valence(\"\")\r\n        }\r\n    }\r\n\r\n    updateTempo() {\r\n        if (this.state.toggleTempo) {\r\n            this.props.tempo(this.state.tempo)\r\n        } else {\r\n            this.props.tempo(\"\")\r\n        }\r\n    }\r\n\r\n\r\n    // Advanced\r\n    onToggleDance() {\r\n        if (!this.state.toggleDance) {\r\n            this.props.danceability(this.state.danceability)\r\n        } else {\r\n            this.props.danceability(\"\")\r\n        }\r\n        this.setState({ toggleDance: !this.state.toggleDance })\r\n    }\r\n\r\n    onToggleEnergy() {\r\n        if (!this.state.toggleEnergy) {\r\n            this.props.energy(this.state.energy)\r\n        } else {\r\n            this.props.energy(\"\")\r\n        }\r\n        this.setState({ toggleEnergy: !this.state.toggleEnergy })\r\n    }\r\n    onToggleAcousticness() {\r\n        if (!this.state.toggleAcousticness) {\r\n            this.props.acousticness(this.state.acousticness)\r\n        } else {\r\n            this.props.acousticness(\"\")\r\n        }\r\n        this.setState({ toggleAcousticness: !this.state.toggleAcousticness });\r\n    }\r\n    onToggleInstrumentalness() {\r\n        if (!this.state.toggleInstrumentalness) {\r\n            this.props.instrumentalness(this.state.instrumentalness)\r\n        } else {\r\n            this.props.instrumentalness(\"\")\r\n        }\r\n        this.setState({ toggleInstrumentalness: !this.state.toggleInstrumentalness });\r\n    }\r\n    onToggleValence() {\r\n        if (!this.state.toggleValence) {\r\n            this.props.valence(this.state.valence)\r\n        } else {\r\n            this.props.valence(\"\")\r\n        }\r\n        this.setState({ toggleValence: !this.state.toggleValence });\r\n    }\r\n    onToggleTempo() {\r\n        if (!this.state.toggleTempo) {\r\n            this.props.tempo(this.state.tempo)\r\n        } else {\r\n            this.props.tempo(\"\")\r\n        }\r\n        this.setState({ toggleTempo: !this.state.toggleTempo });\r\n    }\r\n\r\n    createNotification = (type) => {\r\n        switch (type) {\r\n            case 'info':\r\n                NotificationManager.info('Info message');\r\n                break;\r\n            case 'success':\r\n                NotificationManager.success('Playlist added!', 'Success!');\r\n                break;\r\n            case 'warning':\r\n                NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\r\n                break;\r\n            case 'error':\r\n                NotificationManager.error('Error message', 'Click me!', 5000, () => {\r\n                    alert('callback');\r\n                });\r\n                break;\r\n            default:\r\n                console.log(\"info/success/warning/error is NOT entered.\");\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    buttonClick() {\r\n        this.setState({ showConfirmationModal: true })\r\n        //this.createNotification('success');\r\n        //this.props.createPlaylist();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Container className='toolKit'>\r\n                    <Row className='toolBar'>\r\n                        <Col className={`menuButton ${this.state.showQuickButton ? 'active' : null}`} onClick={this.onToggleQuickButton.bind(this)}>Presets</Col>\r\n                        <Col className={`menuButton ${this.state.showAdvancedToolbar ? 'active' : null}`} onClick={this.onToggleToolbar.bind(this)}>Advanced <i className=\"fas fa-sliders-h\"></i></Col>\r\n                    </Row>\r\n\r\n                    {!this.state.showAdvancedToolbar ? null :\r\n                        <Row>\r\n                            <Col>\r\n                                <Row className='toolRow'>\r\n                                    <Col>\r\n                                        <Button\r\n                                            onClick={this.onToggleDance.bind(this)} size=\"sm\" variant={this.state.toggleDance ? 'secondary' : 'outline-secondary'}>\r\n                                            Dance\r\n                                </Button>\r\n                                    </Col>\r\n                                    <Col className=\"sliderCol\" lg=\"8\" md=\"9\" sm=\"9\">\r\n                                        <InputRange\r\n                                            disabled={!this.state.toggleDance}\r\n                                            step={1} minValue={0} maxValue={10} value={this.state.danceability * 10}\r\n                                            onChange={value => {\r\n                                                this.setState({ danceability: value / 10 });\r\n                                                this.props.danceability(value / 10)\r\n                                            }} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='toolRow'>\r\n                                    <Col>\r\n                                        <Button\r\n                                            onClick={this.onToggleEnergy.bind(this)} size=\"sm\" variant={this.state.toggleEnergy ? 'secondary' : 'outline-secondary'}>\r\n                                            Energy\r\n                                    </Button>\r\n                                    </Col>\r\n                                    <Col className=\"sliderCol\" lg=\"8\" md=\"9\" sm=\"9\">\r\n                                        <InputRange disabled={!this.state.toggleEnergy}\r\n                                            step={1} minValue={0} maxValue={10} value={this.state.energy * 10}\r\n                                            onChange={value => {\r\n                                                this.setState({ energy: value / 10 });\r\n                                                this.props.energy(value / 10)\r\n                                            }} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='toolRow'>\r\n                                    <Col>\r\n                                        <Button\r\n                                            onClick={this.onToggleAcousticness.bind(this)} size=\"sm\" variant={this.state.toggleAcousticness ? 'secondary' : 'outline-secondary'}>\r\n                                            {/* {this.state.toggleAcousticness ? 'ON' : 'OFF'} */}\r\n                                            Acoustic\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col className=\"sliderCol\" lg=\"8\" md=\"9\" sm=\"9\">\r\n                                        <InputRange disabled={!this.state.toggleAcousticness}\r\n                                            step={1} minValue={0} maxValue={10} value={this.state.acousticness * 10}\r\n                                            onChange={value => {\r\n                                                this.setState({ acousticness: value / 10 });\r\n                                                this.props.acousticness(value / 10)\r\n                                            }} />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col>\r\n                                <Row className='toolRow'>\r\n                                    <Col>\r\n                                        <Button\r\n                                            onClick={this.onToggleInstrumentalness.bind(this)} size=\"sm\" variant={this.state.toggleInstrumentalness ? 'secondary' : 'outline-secondary'}>\r\n                                            {/* {this.state.toggleInstrumentalness ? 'ON' : 'OFF'} */}\r\n                                            Instrumental\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col className=\"sliderCol\" lg=\"8\" md=\"9\" sm=\"9\">\r\n                                        <InputRange disabled={!this.state.toggleInstrumentalness}\r\n                                            step={1} minValue={0} maxValue={10} value={this.state.instrumentalness * 10}\r\n                                            onChange={value => {\r\n                                                this.setState({ instrumentalness: value / 10 });\r\n                                                this.props.instrumentalness(value / 10)\r\n                                            }} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='toolRow'>\r\n                                    <Col>\r\n                                        <Button\r\n                                            onClick={this.onToggleValence.bind(this)} size=\"sm\" variant={this.state.toggleValence ? 'secondary' : 'outline-secondary'}>\r\n                                            {/* {this.state.toggleValence ? 'ON' : 'OFF'} */}\r\n                                            Positivity\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col className=\"sliderCol\" lg=\"8\" md=\"9\" sm=\"9\">\r\n                                        <InputRange disabled={!this.state.toggleValence}\r\n                                            step={1} minValue={0} maxValue={10} value={this.state.valence * 10}\r\n                                            onChange={value => {\r\n                                                this.setState({ valence: value / 10 });\r\n                                                this.props.valence(value / 10)\r\n                                            }} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='toolRow'>\r\n                                    <Col>\r\n                                        <Button\r\n                                            onClick={this.onToggleTempo.bind(this)} size=\"sm\" variant={this.state.toggleTempo ? 'secondary' : 'outline-secondary'}>\r\n                                            Tempo\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col className=\"sliderCol\" lg=\"8\" md=\"9\" sm=\"9\">\r\n                                        <InputRange disabled={!this.state.toggleTempo}\r\n                                            step={10} minValue={60} maxValue={300} value={this.state.tempo}\r\n                                            onChange={value => {\r\n                                                this.setState({ tempo: value });\r\n                                                this.props.tempo(value)\r\n                                            }} />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n\r\n                    {!this.state.showQuickButton ? null :\r\n                        <Row>\r\n                            <Col>\r\n                                <Row className='toolRow'>\r\n                                    <QuickButton\r\n                                        onPresetClick={this.onPresetClick.bind(this)}\r\n                                    />\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n\r\n                    <Row><Col onClick={this.props.toggleConfirmationModal} className='playButton'> Create Spotify playlist <i className=\"fab fa-spotify\"></i></Col></Row>\r\n                </Container>\r\n                <NotificationContainer />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolKit;\r\n","import React from 'react';\r\n\r\nclass Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isShowing: false\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const modalWrapper = {\r\n            transform: this.props.displayModal ? 'translateY(0vh)' : 'translateY(-100vh)',\r\n        }\r\n\r\n        const backDrop = {\r\n            opacity: this.props.displayModal ? '1' : '0',\r\n            transform: this.props.displayModal ? 'translateY(0vh)' : 'translateY(-100vh)',\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div style={backDrop} className='backDrop' onClick={this.props.toggleModal.bind(this, false)}>&nbsp;</div>\r\n                <div style={modalWrapper} className='modalWrapper'>\r\n                    <div className='modalHeader'>\r\n                        <h3 className='modalHeaderH3'>Help!</h3>\r\n                    </div>\r\n                    <div className='modalBody'>\r\n\r\n                        <h4>How I work, you ask?</h4>\r\n                        <p className='infoTextModal'>\r\n                            <br />\r\n                            1. You can either select an existing playlist from our dropdown menu OR enter a Spotify playlist link of your own choice.<br />\r\n                            2. When you have chosen your playlist two alternatives will appear; Presets and Advanced. You can either choose one of our already done Presets OR use our toolkit to filter out the songs you want.<br />\r\n                        </p>\r\n                        <h4>But what does it MEAN?</h4>\r\n                        <p className='infoTextModal'>\r\n                            <br />\r\n                            <span style={{ fontWeight: 'bold' }}> Dance </span> describes how suitable a track is for dancing.<br />\r\n                            <span style={{ fontWeight: 'bold' }}> Energy </span> represents a preceptual measure of intensity and activity.<br />\r\n                            <span style={{ fontWeight: 'bold' }}> Acoustic </span> measures whether a track is acoustic.<br />\r\n                            <span style={{ fontWeight: 'bold' }}> Instrumental </span> predicts whether a track contains no vocals.<br />\r\n                            <span style={{ fontWeight: 'bold' }}> Positivity </span> describes the musical positiveness conveyed by a track.<br />\r\n                            <span style={{ fontWeight: 'bold' }}> Tempo </span> shows the overall tempo of a track in beats per minute (BPM).<br />\r\n                        </p>\r\n                    </div>\r\n                    <div className='modalFooter'>\r\n                        <button className='btnCancel' onClick={this.props.toggleModal.bind(this, false)}>CLOSE</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n\r\n","\r\n\r\nexport function getUpperLimit(value) {\r\n    if (value <= 1) {\r\n        return value + 0.1;\r\n    } else {\r\n        return value + 10;\r\n    }\r\n}\r\n\r\nexport function getLowerLimit(value) {\r\n    if (value <= 1) {\r\n        return value - 0.1;\r\n    } else {\r\n        return value - 10;\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nclass ConfirmationModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            playlistName: ''\r\n        }\r\n    }\r\n\r\n    handleInputTextChange(e) {\r\n        let playlistName = e.target.value;\r\n        this.setState({ playlistName: playlistName });\r\n    }\r\n    handleSubmitplaylist() {\r\n        this.props.createPlaylist(this.state.playlistName);\r\n        this.props.toggleModal(false);\r\n    }\r\n\r\n    handleKeyPress(e) {\r\n        if (e.key === \"Enter\") {\r\n            this.handleSubmitplaylist()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const modalWrapper = {\r\n            transform: this.props.displayModal ? 'translateY(0vh)' : 'translateY(-100vh)',\r\n        }\r\n\r\n        const backDrop = {\r\n            opacity: this.props.displayModal ? '1' : '0',\r\n            transform: this.props.displayModal ? 'translateY(0vh)' : 'translateY(-100vh)',\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div style={backDrop} className='backDrop' onClick={this.props.toggleModal.bind(this, false)}>&nbsp;</div>\r\n                <div style={modalWrapper} className='confirmationModalWrapper'>\r\n                    <div className='confirmationModalHeader'>\r\n                        <h3 className='confirmationModalHeaderH3'>Create Playlist</h3>\r\n                    </div>\r\n                    <div className='confirmationModalBody'>\r\n\r\n                        <h5>Enter playlist name</h5>\r\n                        <input\r\n                            className='confirmationModal-input'\r\n                            type='text'\r\n                            onKeyPress={this.handleKeyPress.bind(this)}\r\n                            onChange={this.handleInputTextChange.bind(this)}\r\n                        />\r\n                    </div>\r\n                    <div className='confirmationModalFooter'>\r\n                        <button className='btnCancel' onClick={this.handleSubmitplaylist.bind(this)}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfirmationModal;\r\n\r\n","import React from \"react\";\r\nimport TrackList from \"../TrackList/TrackList\";\r\nimport HeadSearch from \"../HeadSearch/HeadSearch\";\r\nimport WebPlayer from \"../WebPlayer/WebPlayer\";\r\nimport ToolKit from \"../ToolKit/ToolKit\";\r\nimport Modal from '../Modal/Modal';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {\r\n    getUpperLimit,\r\n    getLowerLimit\r\n} from \"../../utilities/filterHelpFunctions.js\";\r\nimport ConfirmationModal from \"../ConfirmationModal/ConfirmationModal\";\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nclass MainWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playlistUri: \"\",\r\n            danceability: \"\",\r\n            energy: \"\",\r\n            acousticness: \"\",\r\n            instrumentalness: \"\",\r\n            valence: \"\",\r\n            tempo: \"\",\r\n            playlist: \"\",\r\n            showModal: false,\r\n            showConfirmationModal: false,\r\n            showLanding: true,\r\n            user: {},\r\n            filteredPlaylist: [],\r\n            userPlaylists: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let parsed = window.location.search.replace(\"?access_token\", \"\");\r\n        if (parsed && parsed !== 'undefined') {\r\n            fetch(`https://moodify.sebastianberglonn.se/user-data/${parsed}`)\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    this.setState({\r\n                        user: json\r\n                    })\r\n                })\r\n            fetch(`https://moodify.sebastianberglonn.se/user-playlists/${parsed}`)\r\n                .then(res => res.json())\r\n                .then(json => this.setState({\r\n                    userPlaylists: json.items.map(playlist => (\r\n                        {\r\n                            name: playlist.name,\r\n                            uri: playlist.id,\r\n                        }\r\n                    ))\r\n                }))\r\n        }\r\n    }\r\n\r\n\r\n    updateDanceability(value) {\r\n        this.setState({\r\n            danceability: value\r\n        });\r\n    }\r\n\r\n    updatePlaylistUri(value) {\r\n        this.setState({\r\n            playlistUri: value\r\n        });\r\n    }\r\n\r\n    updatePlaylist(value) {\r\n        let playlist = value\r\n        this.setState({\r\n            playlist: playlist\r\n        });\r\n    }\r\n\r\n    updateEnergy(value) {\r\n        this.setState({\r\n            energy: value\r\n        });\r\n    }\r\n\r\n    updateAcousticness(value) {\r\n        this.setState({\r\n            acousticness: value\r\n        });\r\n    }\r\n\r\n    updateInstrumentalness(value) {\r\n        this.setState({\r\n            instrumentalness: value\r\n        });\r\n    }\r\n\r\n    updateValence(value) {\r\n        this.setState({\r\n            valence: value\r\n        });\r\n    }\r\n\r\n    updateTempo(value) {\r\n        this.setState({\r\n            tempo: value\r\n        });\r\n    }\r\n\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            showModal: !this.state.showModal\r\n        });\r\n    }\r\n    toggleConfirmationModal() {\r\n        this.setState({\r\n            showConfirmationModal: !this.state.showConfirmationModal\r\n        });\r\n    }\r\n    hideLanding() {\r\n        this.setState({\r\n            showLanding: false\r\n        })\r\n    }\r\n\r\n\r\n    createPlaylist(playlist, inputName) {\r\n        let accessToken = window.location.search.replace(\"?access_token\", \"\");\r\n        let playlistName = inputName\r\n        fetch(`https://moodify.sebastianberglonn.se/create-playlist/${this.state.user.id}/${playlistName}/${accessToken}`, {\r\n            method: 'POST'\r\n        })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                let playlistId = json.id;\r\n                return fetch(`https://moodify.sebastianberglonn.se/add-tracks/${playlistId}/${playlist}/${accessToken}`, {\r\n                    method: 'POST'\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(() => this.setState({ playlistUri: playlistId }))\r\n                    .then(() => this.createNotification('success'))\r\n            })\r\n    }\r\n\r\n    createNotification = (type) => {\r\n        switch (type) {\r\n            case 'info':\r\n                NotificationManager.info('Info message');\r\n                break;\r\n            case 'success':\r\n                NotificationManager.success('Playlist added!', 'Success!');\r\n                break;\r\n            case 'warning':\r\n                NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\r\n                break;\r\n            case 'error':\r\n                NotificationManager.error('Error message', 'Click me!', 5000, () => {\r\n                    alert('callback');\r\n                });\r\n                break;\r\n            default:\r\n                console.log(\"info/success/warning/error is NOT entered.\");\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const filteredPlaylist = !this.state.playlist ? [] : this.state.playlist\r\n            .filter(track => this.state.danceability === '' ? track : (track.danceability >= getLowerLimit(this.state.danceability) && track.danceability <= getUpperLimit(this.state.danceability)))\r\n            .filter(track => this.state.energy === '' ? track : (track.energy >= getLowerLimit(this.state.energy) && track.energy <= getUpperLimit(this.state.energy)))\r\n            .filter(track => this.state.acousticness === '' ? track : (track.acousticness >= getLowerLimit(this.state.acousticness) && track.acousticness <= getUpperLimit(this.state.acousticness)))\r\n            .filter(track => this.state.instrumentalness === '' ? track : (track.instrumentalness >= getLowerLimit(this.state.instrumentalness) && track.instrumentalness <= getUpperLimit(this.state.instrumentalness)))\r\n            .filter(track => this.state.valence === '' ? track : (track.valence >= getLowerLimit(this.state.valence) && track.valence <= getUpperLimit(this.state.valence)))\r\n            .filter(track => this.state.tempo === '' ? track : (track.tempo >= getLowerLimit(this.state.tempo) && track.tempo <= getUpperLimit(this.state.tempo)));\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className={`header-container ${this.state.showLanding ? 'landing' : null}`}>\r\n                    <HeadSearch\r\n                        playlistUri={this.updatePlaylistUri.bind(this)}\r\n                        playlist={this.updatePlaylist.bind(this)}\r\n                        toggleModal={this.toggleModal.bind(this)}\r\n                        hideLanding={this.hideLanding.bind(this)}\r\n                        showLanding={this.state.showLanding}\r\n                        userPlaylists={this.state.userPlaylists}\r\n                    />\r\n                </div>\r\n                <Modal displayModal={this.state.showModal} toggleModal={this.toggleModal.bind(this)} />\r\n                <ConfirmationModal displayModal={this.state.showConfirmationModal} toggleModal={this.toggleConfirmationModal.bind(this)}\r\n                    createPlaylist={this.createPlaylist.bind(this, filteredPlaylist.map(track => track.uri))} />\r\n                {!this.state.showLanding ?\r\n                    <Container className='main-container'>\r\n                        <Col md='auto'>\r\n                            <Row>\r\n                                <Col>\r\n                                    <p className='filteredMessage'\r\n                                        style={{ visibility: filteredPlaylist.length === 0 ? 'hidden' : 'visible' }}\r\n                                    >You have {filteredPlaylist.length} tracks in your list.</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md='12'>\r\n                                    <ToolKit\r\n                                        toggleModal={this.toggleModal.bind(this)}\r\n                                        danceability={this.updateDanceability.bind(this)}\r\n                                        energy={this.updateEnergy.bind(this)}\r\n                                        acousticness={this.updateAcousticness.bind(this)}\r\n                                        instrumentalness={this.updateInstrumentalness.bind(this)}\r\n                                        valence={this.updateValence.bind(this)}\r\n                                        tempo={this.updateTempo.bind(this)}\r\n                                        userId={this.state.user.id}\r\n                                        playlist={this.state.playlist}\r\n                                        toggleConfirmationModal={this.toggleConfirmationModal.bind(this)}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md='12' sm='12' xs='12'>\r\n                                    <TrackList\r\n                                        filterValues={this.state}\r\n                                        playlist={filteredPlaylist}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Container>\r\n                    : null}\r\n                <NotificationContainer />\r\n                <div className='web-player-container'>{this.state.playlist ? <WebPlayer playlistUri={this.state.playlistUri} /> : null}</div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainWrapper;","import React, { Component } from \"react\";\r\nimport \"./App.scss\";\r\nimport MainWrapper from \"./components/MainWrapper/MainWrapper\"\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <MainWrapper />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}